---
import type { CollectionEntry } from "astro:content";
import { getCollection, getEntry } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import FormattedDate from "../components/FormattedDate.astro";
import { Image } from "astro:assets";
import { useTranslations, getLangFromUrl } from "../i18n/utils";

type Props = { post: CollectionEntry<"blog"> };

const { post } = Astro.props;
const { title, description, pubDate, updatedDate, heroImage, author } =
  post.data;
const authorData = await getEntry(author);

const currentLang = getLangFromUrl(Astro.url);
const t = useTranslations(currentLang);

const slugWithLang = post.id.replace(/\.(md|mdx)$/, "");
const [, ...rest] = slugWithLang.split("/");
const slug = rest.join("/");
const otherLang = currentLang === "en" ? "zh-TW" : "en";

const posts = await getCollection("blog");
const otherLangPost = posts.find(
  (p) => p.id.replace(/\.(md|mdx)$/, "") === `${otherLang}/${slug}`
);
---

<html lang={currentLang}>
  <head>
    <BaseHead title={title} description={description} />
    <style>
      main {
        width: calc(100% - 2em);
        max-width: 100%;
        margin: 0;
      }
      .hero-image {
        width: 100%;
      }
      .hero-image img {
        display: block;
        margin: 0 auto;
        border-radius: 12px;
        box-shadow: var(--box-shadow);
      }
      .prose {
        width: 720px;
        max-width: calc(100% - 2em);
        margin: auto;
        padding: 1em;
        color: rgb(var(--gray-dark));
      }
      .title {
        margin-bottom: 1em;
        padding: 1em 0;
        text-align: center;
        line-height: 1;
      }
      .lang-switcher {
        text-align: center;
        margin-bottom: 1rem;
      }
      .title h1 {
        margin: 0 0 0.5em 0;
      }
      .date {
        margin-bottom: 0.5em;
        color: rgb(var(--gray));
      }
      .last-updated-on {
        font-style: italic;
      }
      .meta {
        display: flex;
        justify-content: center;
        align-items: center;
        gap: 1em;
        margin-bottom: 1em;
      }
      .author {
        text-align: center;
      }
      .author a {
        text-decoration: none;
        color: inherit;
        display: flex;
        align-items: center;
        justify-content: center;
      }
      .author img {
        border-radius: 50%;
        margin-right: 0.5em;
      }
      .author span {
        font-weight: bold;
      }
    </style>
  </head>

  <body>
    <Header />
    <main>
      <article>
        <div class="hero-image">
          {
            heroImage && (
              <Image width={1020} height={510} src={heroImage} alt="" />
            )
          }
        </div>
        <div class="prose">
          <div class="title">
            <div class="meta">
              <div class="date">
                <FormattedDate date={pubDate} />
                {
                  updatedDate && (
                    <div class="last-updated-on">
                      {t("blog.lastUpdatedOn")}{" "}
                      <FormattedDate date={updatedDate} />
                    </div>
                  )
                }
              </div>
              {
                authorData && (
                  <div class="author">
                    <a href={`/${currentLang}/authors/${authorData.id}`}>
                      <Image
                        src={authorData.data.avatar}
                        width={40}
                        height={40}
                        alt={authorData.data.name}
                      />
                      <span>{authorData.data.name}</span>
                    </a>
                  </div>
                )
              }
            </div>
            <h1>{title}</h1>
            <hr />
          </div>
          {
            otherLangPost && (
              <div class="lang-switcher">
                <a href={`/${otherLangPost.id.replace(/\.(md|mdx)$/, "")}`}>
                  {t("blog.readIn").replace(
                    "{lang}",
                    otherLang === "en" ? "English" : "中文"
                  )}
                </a>
              </div>
            )
          }
          <slot />
        </div>
      </article>
    </main>
    <Footer />
  </body>
</html>
