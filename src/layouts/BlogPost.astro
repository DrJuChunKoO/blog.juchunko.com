---
import type { CollectionEntry } from "astro:content";
import { getCollection, getEntry } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import FormattedDate from "../components/FormattedDate.astro";
import { useTranslations, getLangFromUrl } from "../i18n/utils";

type Props = { post: CollectionEntry<"blog"> };

const { post } = Astro.props;
const {
  title,
  description,
  pubDate,
  updatedDate,
  heroImage,
  author,
  categories,
} = post.data;
const authorData = await getEntry(author);

// Fetch full category entries if any are referenced in the frontmatter
const categoryEntries = categories
  ? await Promise.all(categories.map((cat) => getEntry(cat)))
  : [];

const currentLang = getLangFromUrl(Astro.url);
const t = useTranslations(currentLang);

const slugWithLang = post.id.replace(/\.(md|mdx)$/, "");
const [, ...rest] = slugWithLang.split("/");
const slug = rest.join("/");
const otherLang = currentLang === "en" ? "zh" : "en";

const posts = await getCollection("blog");
const otherLangPost = posts.find(
  (p) => p.id.replace(/\.(md|mdx)$/, "") === `${otherLang}/${slug}`
);
---

<html lang={currentLang}>
  <head>
    <BaseHead title={title} description={description} />
    <style>
      .lang-switcher {
        text-align: center;
        margin-bottom: 1rem;
      }
    </style>
  </head>

  <body>
    <Header />
    <main>
      <article>
        <div class="container">
          {
            heroImage && (
              <img
                class="w-full rounded-lg"
                src={heroImage}
                alt=""
                transition:name={`${post.id}-image`}
              />
            )
          }
        </div>
        <div class="container">
          <div class="my-4 flex flex-col gap-4">
            {
              categoryEntries.length > 0 && (
                <ul class="-mb-2 flex flex-wrap gap-2">
                  {categoryEntries.map((cat) => (
                    <li transition:name={`${post.id}-category-${cat.id}`}>
                      <a
                        href={`/${currentLang}/categories/${cat.id}`}
                        class="rounded-full bg-gray-100 px-2 py-1 text-xs text-gray-700 hover:bg-gray-200 dark:bg-gray-700 dark:text-gray-200 dark:hover:bg-gray-600"
                      >
                        {cat.data.name[currentLang]}
                      </a>
                    </li>
                  ))}
                </ul>
              )
            }
            <h1
              class="text-2xl font-semibold md:text-4xl"
              transition:name={`${post.id}-title`}
            >
              {title}
            </h1>
            {
              authorData && (
                <a
                  href={`/${currentLang}/authors/${authorData.id}`}
                  class="flex items-center gap-2"
                >
                  <img
                    src={authorData.data.avatar}
                    width={40}
                    height={40}
                    alt={authorData.data.name[currentLang]}
                    class="aspect-square rounded-full object-cover"
                  />
                  <span class="text-base font-semibold">
                    {authorData.data.name[currentLang]}
                  </span>
                </a>
              )
            }
            <div class="text-sm text-gray-500 dark:text-white/50">
              <FormattedDate date={pubDate} />
              {
                updatedDate && (
                  <div class="italic">
                    {t("blog.lastUpdatedOn")}{" "}
                    <FormattedDate date={updatedDate} />
                  </div>
                )
              }
            </div>
          </div>
        </div>
        <div class="container">
          <div class="prose dark:prose-invert">
            <hr />
            {
              otherLangPost && (
                <div class="flex justify-center">
                  <a
                    href={`/${otherLangPost.id.replace(/\.(md|mdx)$/, "")}`}
                    class="text-sm text-gray-500"
                  >
                    {t("blog.readIn").replace(
                      "{lang}",
                      otherLang === "en" ? "English" : "中文"
                    )}
                  </a>
                </div>
              )
            }
            <slot />
          </div>
        </div>
      </article>
    </main>

    <Footer />
  </body>
</html>
